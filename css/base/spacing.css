:root {
    --space:  1em;
    --space-xxxs:  calc(0.25 * var(--space));
    --space-xxs:   calc(0.375 * var(--space));
    --space-xs:    calc(0.5 * var(--space));
    --space-s:    calc(0.75 * var(--space));
    --space-m:    calc(1.25 * var(--space));
    --space-l:    calc(2 * var(--space));
    --space-xl:    calc(3.25 * var(--space));
    --space-xxl:   calc(5.25 * var(--space));
    --space-xxxl:  calc(8.5 * var(--space));
}

@define-mixin space $prefix, $prop {
    .$(prefix) { $(prop): var(--space); }
    .$(prefix)x { $(prop): 0 var(--space); }
    .$(prefix)y { $(prop): var(--space) 0; }
    .$(prefix)l { $(prop)-left: var(--space); }
    .$(prefix)r { $(prop)-right: var(--space); }
    .$(prefix)t { $(prop)-top: var(--space); }
    .$(prefix)b { $(prop)-bottom: var(--space); }
    .$(prefix)l-auto { $(prop)-left: auto; }
    .$(prefix)r-auto { $(prop)-right: auto; }
    
    @for $i from 2 to 12 {
        .$(prefix)-$i { $(prop): calc($(i)*var(--space)); }
        .$(prefix)x-$i { $(prop): 0 calc($(i)*var(--space)); }
        .$(prefix)y-$i { $(prop): calc($(i)*var(--space)) 0; }
        .$(prefix)l-$i { $(prop)-left: calc($(i)*var(--space)); }
        .$(prefix)r-$i { $(prop)-right: calc($(i)*var(--space)); }
        .$(prefix)t-$i { $(prop)-top: calc($(i)*var(--space)); }
        .$(prefix)b-$i { $(prop)-bottom: calc($(i)*var(--space)); }
    }
}
@mixin space m, margin {}
@mixin space p, padding {}

.space-xxxs {
    --space: var(--space-xxxs);
}
.space-xxs {
    --space: var(--space-xxs);
}
.space-xs {
    --space: var(--space-xs);
}
.space-s {
    --space: var(--space-s);
}
.space-m {
    --space: var(--space-m);
}
.space-m {
    --space: var(--space-m);
}
.space-l {
    --space: var(--space-l);
}
.space-xl {
    --space: var(--space-xl);
}
.space-xxl {
    --space: var(--space-xxl);
}
.space-xxxl {
    --space: var(--space-xxxl);
}